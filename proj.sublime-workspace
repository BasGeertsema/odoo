{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"knw",
				"knownPos"
			],
			[
				"Writ",
				"WrittenToFile"
			],
			[
				"Validation",
				"Validation"
			],
			[
				"encodes",
				"encodes_time"
			],
			[
				"cons",
				"consensusParams"
			],
			[
				"int",
				"int32_t"
			],
			[
				"Con",
				"ConsensusParams"
			],
			[
				"Activ",
				"ActiveChain"
			],
			[
				"rej",
				"rejectReason_"
			],
			[
				"Validat",
				"ValidationMode"
			],
			[
				"Valida",
				"ValidationMode"
			],
			[
				"VAlidation",
				"ValidationState"
			],
			[
				"reje",
				"rejectReason"
			],
			[
				"debug",
				"debugMessage"
			],
			[
				"cor",
				"corruptionPossible_"
			],
			[
				"reject",
				"rejectReason_"
			],
			[
				"Hash",
				"hashPrevBlock"
			],
			[
				"Blco",
				"BlockHash"
			],
			[
				"Is",
				"isDirty_"
			],
			[
				"BlackLis",
				"BlackListDoc"
			],
			[
				"time_",
				"time_point"
			],
			[
				"time",
				"time_since_epoch"
			],
			[
				"duration",
				"duration_cast"
			],
			[
				"ad",
				"address_v4"
			],
			[
				"is_v",
				"is_v6"
			],
			[
				"TimeL",
				"TimeLeftLockfree"
			],
			[
				"outbou",
				"outboundLimit_"
			],
			[
				"outbo",
				"outboundTimeframe_"
			],
			[
				"uint",
				"uint64_t"
			],
			[
				"sendby",
				"mapSendBytesPerMsgCmd_"
			],
			[
				"whit",
				"whitelistedRange_"
			],
			[
				"banned",
				"bannedIsDirty_"
			],
			[
				"bann",
				"bannedIsDirty_"
			],
			[
				"sendMsg",
				"SendMessages"
			],
			[
				"Message",
				"MessageHeader"
			],
			[
				"stat",
				"static_assert"
			],
			[
				"send",
				"sendBuffer_"
			],
			[
				"Seria",
				"SerializeAndWrite"
			],
			[
				"ent",
				"entriesPerGeneration_"
			],
			[
				"en",
				"entriesThisGeneration"
			],
			[
				"is",
				"is_v4"
			],
			[
				"entires",
				"entriesPerGeneration_"
			],
			[
				"Inve",
				"InventoryRequestType"
			],
			[
				"address",
				"addressName"
			],
			[
				"Service",
				"ServiceFlags"
			],
			[
				"Check",
				"Checksum"
			],
			[
				"Address",
				"AddressTables"
			],
			[
				"GetBuck",
				"GetBucketElement"
			],
			[
				"tried",
				"triedcnt_"
			],
			[
				"toEvic",
				"toEvictNew"
			],
			[
				"Peer",
				"PeerAddress"
			],
			[
				"Ser",
				"ServiceFlags"
			],
			[
				"to_",
				"to_v4"
			],
			[
				"to_v",
				"to_v6"
			],
			[
				"addr",
				"address"
			],
			[
				"evic",
				"evictInfo"
			],
			[
				"NewBu",
				"NewBucketsPerSourceGroup"
			],
			[
				"inc",
				"included"
			],
			[
				"Tx",
				"TxOut0"
			],
			[
				"Script",
				"ScriptPubKey"
			],
			[
				"Coins",
				"CoinBase"
			],
			[
				"blockFileDoc",
				"blockfileDocs"
			],
			[
				"last",
				"lastBlockDoc"
			],
			[
				"BestBl",
				"BestBlockDoc"
			],
			[
				"LastBl",
				"LastBlockFileDoc"
			],
			[
				"Docu",
				"DocumentTraits"
			],
			[
				"Be",
				"BestValidBlock"
			],
			[
				"Block",
				"BlockIndexWorkComparator"
			],
			[
				"Prev",
				"Prev"
			],
			[
				"Chain",
				"ChainTxCnt"
			],
			[
				"ChaninT",
				"ChainTxCnt"
			],
			[
				"BlockM",
				"BlockMap"
			],
			[
				"Kvs",
				"KVSIterator"
			],
			[
				"blo",
				"BlockIndexData"
			],
			[
				"Document",
				"DocumentValue"
			],
			[
				"Merk",
				"MerkleRootHash"
			],
			[
				"CON",
				"Confirm"
			],
			[
				"for",
				"forestdb"
			],
			[
				"target",
				"target_compile_options"
			],
			[
				"geneis",
				"genesisIndex"
			],
			[
				"Data",
				"DataBlockPos"
			],
			[
				"Rais",
				"RaiseValidity"
			],
			[
				"gen",
				"genesisIndex"
			],
			[
				"oldC",
				"oldChunkCnt"
			],
			[
				"file",
				"filesystem"
			],
			[
				"Heigh",
				"HeightMax"
			],
			[
				"blockF",
				"blockFiles_"
			],
			[
				"known",
				"knownPos"
			],
			[
				"blcok",
				"blockFiles_"
			],
			[
				"CreateD",
				"CreateDefaultGenesisBlock"
			],
			[
				"Bl",
				"BlockValidation"
			],
			[
				"vali",
				"validationLevel"
			],
			[
				"Time",
				"TimeFirst"
			],
			[
				"Compute",
				"ComputeMerkleHash"
			],
			[
				"Log",
				"logEnabled_"
			],
			[
				"Scirpt",
				"ScriptResult"
			],
			[
				"Sign",
				"SignatureCompact"
			],
			[
				"Sig",
				"SigPushOnly"
			],
			[
				"Parse",
				"ParsePubKey"
			],
			[
				"PubK",
				"PubKeyC"
			],
			[
				"pub",
				"pubkey_o"
			],
			[
				"sig",
				"sigval_o"
			],
			[
				"Invali",
				"InvalidStackValue"
			],
			[
				"Scr",
				"ScriptError"
			],
			[
				"SCript",
				"ScriptError"
			],
			[
				"InvalidS",
				"InvalidStackValue"
			],
			[
				"To",
				"ToInt64"
			],
			[
				"deci",
				"decision_o"
			],
			[
				"dec",
				"decision_o"
			],
			[
				"seq",
				"sequence_o"
			],
			[
				"SI",
				"SInt64Encoded"
			],
			[
				"data",
				"datarange"
			],
			[
				"SElement",
				"SElement"
			],
			[
				"numeric",
				"numeric_limits"
			],
			[
				"ru",
				"runtime_error"
			],
			[
				"sign",
				"signature"
			],
			[
				"scri",
				"scriptCode"
			],
			[
				"iter",
				"iterator"
			],
			[
				"Lockti",
				"LocktimeDisableFlag"
			],
			[
				"Sc",
				"ScriptError"
			],
			[
				"PushDa",
				"PUSHDATA2"
			],
			[
				"OP_Push",
				"OP_PUSHDATA1"
			],
			[
				"MAX",
				"MAX_SCRIPT_SIZE"
			],
			[
				"uin",
				"uint8_t"
			],
			[
				"scrip",
				"scriptSig"
			],
			[
				"Signa",
				"Signature"
			],
			[
				"Signate",
				"SignatureCompact"
			],
			[
				"Write",
				"WriteBuffer"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Build Game",
					""
				],
				[
					"Build Game",
					"Build Tests"
				],
				[
					"Build Game",
					"Run"
				]
			],
			[
				"Build Game",
				"Build Tests"
			]
		],
		[
			[
				[
					"Build Game",
					""
				],
				[
					"Build Game",
					"Build Tests"
				],
				[
					"Build Game",
					"Run"
				],
				[
					"Build Game",
					"Run Tests"
				]
			],
			[
				"Build Game",
				"Run"
			]
		],
		[
			[
				[
					"Build Game",
					""
				],
				[
					"Build Game",
					"Game Debug"
				],
				[
					"Build Game",
					"Tests Debug"
				],
				[
					"Build Game",
					"Tests RelWithDebInfo"
				],
				[
					"Build Game",
					"Run"
				],
				[
					"Build Game",
					"Run Tests"
				]
			],
			[
				"Build Game",
				"Run Tests"
			]
		],
		[
			[
				[
					"Build Game",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Build Game",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"pchain VS",
					""
				],
				[
					"pchain VS",
					"Build Tests"
				],
				[
					"pchain VS",
					"Run Test"
				],
				[
					"pchain VS",
					"Run"
				]
			],
			[
				"pchain VS",
				"Build Tests"
			]
		],
		[
			[
				[
					"pchain VS",
					""
				],
				[
					"pchain VS",
					"Run"
				]
			],
			[
				"pchain VS",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "anaconda",
		"selected_items":
		[
			[
				"anaconda",
				"Anaconda: Vagrant Enable"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"split",
				"Text Pastry: Split selection"
			],
			[
				"1t",
				"Text Pastry: From 1 To X"
			],
			[
				"0 t",
				"Text Pastry: From 0 To X"
			],
			[
				"pastr",
				"Text Pastry: Range"
			],
			[
				"pastry",
				"Text Pastry: From 0 To X"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"clan",
				"Clang Format: Format Selection"
			],
			[
				"clang",
				"Clang Format: Format Selection"
			],
			[
				"preview",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"wordwr",
				"Word Wrap: Toggle"
			],
			[
				"wor",
				"Word Wrap: Toggle"
			],
			[
				"inden",
				"Indentation: Reindent Lines"
			],
			[
				"world",
				"Word Wrap: Toggle"
			],
			[
				"world ",
				"Word Wrap: Toggle"
			],
			[
				"worl",
				"Word Wrap: Toggle"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"wo",
				"Word Wrap: Toggle"
			],
			[
				"form",
				"Clang Format: Format Selection"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"clear",
				"Bookmarks: Clear All"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"clang f",
				"Clang Format: Format Selection"
			],
			[
				"swift",
				"Set Syntax: Swift"
			],
			[
				"add pa",
				"Package Control: Advanced Install Package"
			],
			[
				"format",
				"Clang Format: Format Selection"
			],
			[
				"clang form",
				"Clang Format: Format Selection"
			],
			[
				"clangfo",
				"Clang Format: Format Selection"
			],
			[
				"glsl",
				"Set Syntax: OpenGL SL"
			],
			[
				"markd",
				"Markdown Preview: Preview in Browser"
			],
			[
				"github: ",
				"Github: Blame"
			],
			[
				"git",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"run",
				"Build With: Build Game - Run"
			],
			[
				"powersh",
				"Set Syntax: PowerShell"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"console",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"build",
				"Build With: Build Game"
			],
			[
				"cmake",
				"Set Syntax: CMake"
			],
			[
				"markdo",
				"Set Syntax: Markdown Extended"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"toggle",
				"View: Toggle Tabs"
			],
			[
				"toggl",
				"View: Toggle Tabs"
			],
			[
				"woro",
				"Word Wrap: Toggle"
			],
			[
				"syntax: c++",
				"Set Syntax: C++"
			],
			[
				"lowe",
				"Convert Case: Lower Case"
			],
			[
				"SYNTAX: PRO",
				"Set Syntax: Protocol Buffer"
			],
			[
				"tab",
				"View: Toggle Tabs"
			],
			[
				"indent",
				"Indentation: Reindent Lines"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"markdow",
				"Set Syntax: Markdown"
			],
			[
				"actionsc",
				"Package Control: Install Package"
			],
			[
				"hlsl",
				"Set Syntax: HLSL"
			],
			[
				"package ",
				"Package Control: Install Package"
			],
			[
				"sql",
				"Set Syntax: SQL"
			],
			[
				"jdon",
				"JSON Reindent: reindent file or selection"
			],
			[
				"idnent",
				"Indentation: Reindent Lines"
			],
			[
				"xml",
				"Set Syntax: XML"
			]
		],
		"width": 432.0
	},
	"console":
	{
		"height": 120.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Development/odoo",
		"/C/Development/odoo/odoo"
	],
	"file_history":
	[
		"/C/Development/odoo/setup.py",
		"/C/Development/bizzcloud/test.py",
		"/C/Development/pgb/src/forestdb/docs.h",
		"/C/Development/pgb/src/forestdb/all.h",
		"/C/Development/pgb/src/net/address.h",
		"/C/Development/pgb/src/chain/blockfile.h",
		"/C/Development/pgb/src/chain/validation.h",
		"/C/Development/pgb/src/chain/params.h",
		"/C/Development/pgb/src/common/arith_uint256.cpp",
		"/C/Development/pgb/src/common/bitmask.h",
		"/C/Development/pgb/src/script/script.h",
		"/C/Development/pgb/src/script/interpreter.h",
		"/C/Development/pgb/src/chain/transaction.h",
		"/C/Development/pgb/src/chain/block.h",
		"/C/Development/pgb/src/chain/blockmap.h",
		"/C/Development/pgb/src/chain/context.h",
		"/C/Development/pgb/src/chain/chain.h",
		"/C/Development/pgb/CMakeLists.txt",
		"/C/Development/pgb/src/common/arith_uint256.h",
		"/C/Development/pgb/src/net/node.h",
		"/C/Development/pgb/src/net/node.cpp",
		"/C/Development/pgb/src/net/network.cpp",
		"/C/Development/pgb/src/chain/pow.cpp",
		"/C/Development/pgb/src/chain/pow.h",
		"/C/Development/pgb/src/crypto/merkle.cpp",
		"/C/Development/pgb/src/net/network.h",
		"/C/Development/pgb/src/net/accesslists.cpp",
		"/C/Development/pgb/src/net/accesslists.h",
		"/C/Development/pgb/src/common/time.h",
		"/C/Development/pgb/bugs.txt",
		"/C/Development/pgb/src/script/script.cpp",
		"/c/development/pgb/src/chain/amount.h",
		"/C/Development/pgb/src/common/serialization.h",
		"/C/Development/pgb/thirdparty/forestdb/src/kvs_handle.cc",
		"/C/Development/pgb/src/test/ranges.cpp",
		"/C/Development/pgb/src/forestdb/store.cpp",
		"/C/Development/pgb/src/forestdb/store.h",
		"/C/Development/pgb/src/common/types.h",
		"/C/Development/pgb/src/common/endian.h",
		"/C/Development/pgb/src/chain/chain.cpp",
		"/C/Development/pgb/src/chain/blockfile.cpp",
		"/C/Development/pgb/src/test/forestdb.cpp",
		"/C/Development/pgb/src/chain/amount.h",
		"/C/Development/pgb/thirdparty/catch/include/catch/catch.h",
		"/C/Development/pgb/src/chain/init.cpp",
		"/C/Development/pgb/src/chain/operations.cpp",
		"/C/Development/pgb/src/chain/transaction.cpp",
		"/C/Development/pgb/src/chain/operations.h",
		"/C/Development/pgb/src/chain/coin.h",
		"/C/Development/forestdb/INSTALL.md",
		"/C/Development/pgb/thirdparty/forestdb/CMakeLists.txt",
		"/C/Development/pgb/thirdparty/forestdb/include/libforestdb/fdb_types.h",
		"/c/development/range-v3-vs2015/include/range/v3/view_facade.hpp",
		"/C/Development/pgb/thirdparty/cereal/include/cereal/details/polymorphic_impl.hpp",
		"/C/Development/pgb/thirdparty/forestdb/src/fdb_errors.cc",
		"/C/Development/pgb/thirdparty/forestdb/include/libforestdb/forestdb.h",
		"/C/Development/pgb/src/common/compat.h",
		"/C/Development/pgb/src/chain/init.h",
		"/c/program files (x86)/microsoft visual studio 14.0/vc/include/tuple",
		"/C/Development/pgb/src/common/sensitive_vector.h",
		"/C/Development/pgb/src/net/bloom.cpp",
		"/C/Development/pgb/src/net/bloom.h",
		"/C/Development/pgb/src/net/message.h",
		"/C/Development/pgb/src/test/net.cpp",
		"/C/Development/pgb/thirdparty/asio/include/asio/deadline_timer.hpp",
		"/C/Development/pgb/thirdparty/asio/include/asio/basic_deadline_timer.hpp",
		"/c/program files (x86)/windows kits/10/include/10.0.10586.0/shared/sdkddkver.h",
		"/C/Development/asio/configure",
		"/c/development/pgb/thirdparty/forestdb/src/atomic.h",
		"/C/Development/pgb/src/test/chain.cpp",
		"/c/development/pgb/thirdparty/asio/include/asio/impl/write_at.hpp",
		"/c/development/pgb/thirdparty/asio/include/asio/detail/config.hpp",
		"/C/Development/pgb/src/test/common.cpp",
		"/C/Development/pgb/thirdparty/forestdb/src/api_wrapper.cc",
		"/c/development/pgb/thirdparty/forestdb/src/common.h",
		"/C/Development/pgb/src/net/protocol.h",
		"/C/Development/pgb/src/common/random.h",
		"/C/Development/pgb/src/crypto/hash.h",
		"/c/development/pgb/src/common/optional.h",
		"/C/Development/pgb/thirdparty/secp256k1/src/bench_schnorr_verify.c",
		"/C/Development/pgb/src/crypto/key.h",
		"/C/Development/pgb/src/crypto/key.cpp",
		"/C/Development/pgb/thirdparty/secp256k1/include/secp256k1_schnorr.h",
		"/C/Development/pgb/thirdparty/secp256k1/src/modules/schnorr/main_impl.h",
		"/C/Development/pgb/thirdparty/secp256k1/src/bench.h",
		"/C/Development/pgb/src/main.cpp",
		"/C/Development/pgb/src/crypto/hash.cpp",
		"/C/Development/Range-V3-VS2015/include/range/v3/view_adaptor.hpp",
		"/C/Development/Range-V3-VS2015/include/range/v3/range_access.hpp",
		"/C/Program Files (x86)/Microsoft Visual Studio 14.0/VC/include/map",
		"/c/development/pgb/thirdparty/asio/include/asio/detail/addressof.hpp",
		"/c/development/pgb/thirdparty/asio/include/asio/handler_alloc_hook.hpp",
		"/C/Development/pgb/src/script/interpreter.cpp",
		"/C/Development/Range-V3-VS2015/include/range/v3/action/action.hpp",
		"/C/Development/pgb/src/common/range.h",
		"/C/Development/pgb/.gitignore",
		"/C/Development/pgb/src/net/address.cpp",
		"/C/Development/pgb/src/fmt/format.cc",
		"/c/development/pgb/src/crypto/hashbuffer.h",
		"/C/Development/pgb/src/net/inventory.h",
		"/C/Development/pgb/thirdparty/asio/include/asio/ip/address_v6.hpp",
		"/C/Development/pgb/src/crypto/common.h",
		"/C/Development/pgb/thirdparty/asio/include/asio/basic_streambuf.hpp",
		"/C/Development/pgb/src/crypto/merkle.h",
		"/C/Development/pgb/src/test/secp256k1.cpp",
		"/C/Development/secp256k1/src/basic-config.h",
		"/c/development/pgb/thirdparty/secp256k1/src/field_impl.h",
		"/C/Development/pgb/thirdparty/secp256k1/src/secp256k1.c",
		"/C/Development/pgb/thirdparty/secp256k1/src/util.h",
		"/c/development/pgb/thirdparty/secp256k1/src/scalar_4x64_impl.h",
		"/C/Development/pgb/thirdparty/cereal/include/cereal/external/rapidjson/document.h",
		"/C/Development/pgb/thirdparty/forestdb/src/blockcache.cc",
		"/c/development/range-v3-vs2015/include/range/v3/action/sort.hpp",
		"/c/program files (x86)/microsoft visual studio 14.0/vc/include/algorithm",
		"/C/Development/pgb/thirdparty/asio/include/asio/buffered_write_stream.hpp",
		"/c/development/range-v3-vs2015/include/range/v3/utility/iterator.hpp",
		"/C/Development/pgb/thirdparty/forestdb/src/kvs_handle.h",
		"/C/Development/pgb/thirdparty/forestdb/src/btree.h",
		"/c/development/pgb/thirdparty/cereal/include/cereal/cereal.hpp",
		"/c/program files (x86)/microsoft visual studio 14.0/vc/include/chrono",
		"/C/Development/pgb/src/common/limitedmap.h",
		"/C/Development/pgb/thirdparty/asio/include/asio/buffer.hpp",
		"/C/Development/pgb/src/net/net.h",
		"/C/Development/pgb/thirdparty/cereal/include/cereal/details/static_object.hpp",
		"/c/development/pgb/thirdparty/asio/include/asio/ip/address.hpp",
		"/c/program files (x86)/microsoft visual studio 14.0/vc/include/xtree",
		"/C/Development/pgb/src/crypto/hashbuffer.h",
		"/C/Development/pgb/thirdparty/cereal/include/cereal/archives/json.hpp"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"C:\\Development\\pgb\\src\\",
			"C:\\Development\\pgb\\",
			"C:\\Development\\pgb\\src",
			"C:\\Development\\IA\\Source",
			"C:\\Development\\IA\\Source,C:\\Development\\IA\\ThirdParty,C:\\Development\\urho3d\\Source\\Urho3D",
			"C:\\Development\\IA\\,C:\\Development\\urho3d\\Source\\Urho3D",
			"C:\\Development\\IA\\Source\\,C:\\Development\\urho3d\\Source\\Urho3D",
			"C:\\Development\\IA\\Source\\:C:\\Development\\urho3d\\Source\\Urho3D\\",
			"C:\\Development\\IA\\Source\\;C:\\Development\\urho3d\\Source\\Urho3D",
			"C:\\Development\\IA\\Source\\",
			"C:\\Development\\IA\\ThirdParty\\x64\\oglplus\\include\\oglplus\\",
			"C:\\Development\\IA\\Source\\:C:\\Development\\IA\\ThirdParty\\x64\\oglplus\\include\\oglplus\\",
			"C:\\Development\\IA\\Source\\:C:\\Development\\IA\\ThirdParty\\x64\\oglplus\\include\\oglplus",
			"C:\\Development\\IA\\Source\\;C:\\Development\\IA\\ThirdParty\\x64\\oglplus\\include\\oglplus",
			"C:\\Development\\IA\\Source\\",
			"C:\\Development\\IA\\Source\\test",
			"C:\\Development\\IA\\Source,C:\\Development\\urho3d\\Source\\Urho3D",
			"C:\\Development\\IA\\Source",
			"C:\\Development\\IA\\",
			"C:\\Development\\IA\\Source\t",
			"C:\\Development\\IA\\Source",
			"C:\\Development\\IA\\bin\\CoreData\\Shaders\\GLSL",
			"C:\\Program Files\\Urho3D\\include",
			"",
			"C:\\Development\\IA\\bin\\CoreData\\Shaders\\HLSL",
			"C:\\Development\\ia\\source",
			"C:\\Development\\ia",
			"C:\\Development\\boost",
			"C:\\Development\\ia - 492 4.10",
			"C:\\Development\\dactulos\\xml",
			"C:\\Development\\ia\\",
			"C:\\Development\\ftycoon\\src",
			"C:\\Development\\boost\\boost",
			"C:\\Development\\gtest-1.7.0\\",
			"C:\\Users\\bgeer_000\\Documents\\Unreal Projects\\StrategyGame\\,C:\\Users\\bgeer_000\\Desktop\\export2",
			"C:\\Users\\bgeer_000\\Documents\\Unreal Projects\\StrategyGame\\",
			"C:\\Users\\bgeer_000\\Documents\\Unreal Projects\\StrategyGame\\Source",
			"C:\\Users\\bgeer_000\\Desktop\\export2",
			"C:\\Users\\bgeer_000\\Desktop\\export",
			"C:\\Users\\bgeer_000\\Desktop\\renieuwexmlbestanden",
			"C:\\Users\\bgeer_000\\Desktop\\export2",
			"C:\\Users\\bgeer_000\\Desktop\\export"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\");",
			"^.*\\S+.*$",
			"mapBlocksUnlinked",
			"setBlockIndexCandidates",
			"sequenceid",
			",",
			"pindex",
			"CBlockIndex",
			"nChainTx",
			"pprev",
			"validtran",
			"havedata",
			"pindexNew->",
			"datapos",
			"acceptbloc",
			"aceptblock",
			"hasdata",
			"hasMoreWork",
			"nBlockSize",
			"blockValidation",
			"failed",
			"ContextualCheckBlock",
			"cbScript",
			"state.DoS",
			"checkTime",
			"txin",
			"TxIn",
			"blockTime",
			"locktime",
			"nLockTime",
			"nLockTimeCutoff",
			"nLockTimeFlags",
			"nHeight",
			"pindexPrev",
			"ValidationState",
			"checkPOW",
			"Tx",
			"int",
			"int32_t",
			"CheckTransaction",
			"txin",
			"valueOut",
			"nValue",
			"txout",
			"nValueOut",
			"REJECT_INVALID",
			"vin",
			"100, false",
			"10, false",
			"state.DoS",
			"vin",
			"vtx",
			"fCheckMerkleRoot",
			"fNewBlock",
			"{ index }",
			"txcnt",
			"tx",
			"true",
			"fTooFarAhead",
			"HasMoreWork",
			"AlreadyHave",
			"chainActive",
			"pindex",
			"index",
			"fRequested",
			"AcceptBlockHeader",
			"index.",
			"pindexBestHeader",
			"BestHeader",
			"index",
			"AddToBlockIndex",
			",",
			"pindexPrev",
			"nBits",
			"params.powLimit",
			"PowLimit",
			"powLimit",
			"nActualTimespan",
			"pindexLast",
			"BlockIndex&",
			"pindexFirst",
			"nPowTargetSpacing",
			"nHeight",
			"pindexLast",
			"uint256",
			"Uint256",
			"uint256",
			"nProofOfWorkLimit",
			"unsigned int",
			"indexLast",
			"pindexLast",
			"BlockIndex",
			"unsigned int",
			"nHeight",
			"types",
			"BlockIndex",
			"nAdjustedTime",
			"count",
			"const",
			"at",
			"value_type",
			"blockMap.insert",
			"ContextualCheckBlockHeader",
			"prevBlockIndex",
			"bad-prevblk",
			"state",
			"mi",
			"Failed",
			"state",
			"miSelf",
			"mapBlockIndex",
			";",
			"rejectReason_In",
			"rejectReason_ ",
			"strDebugMessage",
			"strDebugMessageIn",
			" bool ret = false,",
			"false",
			"ret",
			"CorruptionPossible",
			"corruptionPossible",
			"CorruptionPossible",
			"corruptionPossible",
			"corruptionIn",
			"rejectReason_In",
			"_rejectCode_",
			"chRejectCode",
			"rejectReason_"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"{\n",
			";\n",
			"bin256",
			"Core::AssetRef",
			",\n",
			"\n    ",
			"Components::ServiceOperation",
			"GoodPlacement",
			"#include \"assets/construction.h\"\n",
			";\n",
			"Core::WorldGrid",
			"#include \"assets/asset.h\"",
			"WindowVarVector",
			"Components::CreateInfraRepository",
			"State::NavMap",
			"",
			"{$1}",
			"Urho3D::SCANCODE_",
			"Urho3D::KEY_",
			"(bodies[$1].AngularVelocity % $2).Scalar()",
			"(bodies[$1].Velocity % $2).Scalar()",
			"(bodies[\\\\1].Velocity % \\\\2).Scalar()",
			"",
			"${CMAKE_SOURCE_DIR}/Source",
			"\",",
			"\"",
			"\",",
			"\"",
			")",
			"(",
			"",
			",",
			");",
			"EXECUTE edapplication.sp_postenlijst_rebuild_acct("
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 30.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 355.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "proj.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"setup",
				"setup.py"
			],
			[
				"setup.py",
				"setup.py"
			],
			[
				"script.",
				"pgb\\src\\script\\script.h"
			],
			[
				"time.h",
				"pgb\\src\\common\\time.h"
			],
			[
				"tran",
				"pgb\\src\\chain\\transaction.h"
			],
			[
				"script.h",
				"pgb\\src\\script\\script.h"
			],
			[
				"amount",
				"pgb\\src\\chain\\amount.h"
			],
			[
				"types.",
				"pgb\\src\\common\\types.h"
			],
			[
				"endian",
				"pgb\\src\\common\\endian.h"
			],
			[
				"cmake",
				"pgb\\CMakeLists.txt"
			],
			[
				"pow",
				"pgb\\src\\chain\\pow.cpp"
			],
			[
				"chainpa",
				"pgb\\src\\chain\\params.h"
			],
			[
				"cmakeli",
				"pgb\\CMakeLists.txt"
			],
			[
				"blockmap",
				"pgb\\src\\chain\\blockmap.h"
			],
			[
				"bitmask",
				"pgb\\src\\common\\bitmask.h"
			],
			[
				"seria",
				"pgb\\src\\common\\serialization.h"
			],
			[
				"node.h",
				"pgb\\src\\net\\node.h"
			],
			[
				"networ",
				"pgb\\src\\net\\network.h"
			],
			[
				"ranges",
				"pgb\\src\\test\\ranges.cpp"
			],
			[
				"store.",
				"pgb\\src\\forestdb\\store.cpp"
			],
			[
				"docs",
				"pgb\\src\\forestdb\\docs.h"
			],
			[
				"store",
				"pgb\\src\\forestdb\\store.h"
			],
			[
				"forestd",
				"pgb\\src\\test\\forestdb.cpp"
			],
			[
				"a",
				"pgb\\src\\net\\address.h"
			],
			[
				"forest",
				"pgb\\src\\test\\forestdb.cpp"
			],
			[
				"all",
				"pgb\\src\\forestdb\\all.h"
			],
			[
				"init",
				"pgb\\src\\chain\\init.cpp"
			],
			[
				"forestdb",
				"pgb\\src\\test\\forestdb.cpp"
			],
			[
				"init.c",
				"pgb\\src\\chain\\init.cpp"
			],
			[
				"forestdb.h",
				"pgb\\thirdparty\\forestdb\\include\\libforestdb\\forestdb.h"
			],
			[
				"kvs",
				"pgb\\thirdparty\\forestdb\\src\\kvs_handle.h"
			],
			[
				"kvsha",
				"pgb\\thirdparty\\forestdb\\src\\kvs_handle.cc"
			],
			[
				"fore",
				"pgb\\src\\test\\forestdb.cpp"
			],
			[
				"access",
				"pgb\\src\\net\\accesslists.h"
			],
			[
				"docs.",
				"pgb\\src\\forestdb\\docs.h"
			],
			[
				"addr",
				"pgb\\src\\net\\address.h"
			],
			[
				"add",
				"pgb\\src\\net\\address.h"
			],
			[
				"addres",
				"pgb\\src\\net\\address.h"
			],
			[
				"net.cpp",
				"pgb\\src\\net\\net.cpp"
			],
			[
				"net.h",
				"pgb\\src\\net\\net.h"
			],
			[
				"hsah",
				"pgb\\src\\crypto\\hash.h"
			],
			[
				"hash.",
				"pgb\\src\\crypto\\hash.h"
			],
			[
				"net.",
				"pgb\\src\\net\\net.h"
			],
			[
				"net",
				"pgb\\src\\test\\net.cpp"
			],
			[
				"address_v",
				"pgb\\thirdparty\\asio\\include\\asio\\ip\\address_v6.hpp"
			],
			[
				"hash.h",
				"pgb\\src\\crypto\\hash.h"
			],
			[
				"endi",
				"pgb\\src\\common\\endian.h"
			],
			[
				"seri",
				"pgb\\src\\common\\serialization.h"
			],
			[
				"sensi",
				"pgb\\src\\common\\sensitive_vector.h"
			],
			[
				"net.cp",
				"pgb\\src\\net\\net.cpp"
			],
			[
				"range",
				"pgb\\src\\test\\ranges.cpp"
			],
			[
				"message",
				"pgb\\src\\net\\message.h"
			],
			[
				"block",
				"pgb\\src\\chain\\block.h"
			],
			[
				"cmakelis",
				"pgb\\CMakeLists.txt"
			],
			[
				"types",
				"pgb\\src\\common\\types.h"
			],
			[
				"hash",
				"pgb\\src\\crypto\\hash.h"
			],
			[
				"bloom",
				"pgb\\src\\net\\bloom.cpp"
			],
			[
				"protoc",
				"pgb\\src\\net\\protocol.h"
			],
			[
				"mess",
				"pgb\\src\\net\\message.h"
			],
			[
				"seriali",
				"pgb\\src\\common\\serialization.h"
			],
			[
				"main",
				"pgb\\src\\main.cpp"
			],
			[
				"address",
				"pgb\\src\\net\\address.h"
			],
			[
				"bitma",
				"pgb\\src\\common\\bitmask.h"
			],
			[
				"endia",
				"pgb\\src\\common\\endian.h"
			],
			[
				"serializ",
				"pgb\\src\\common\\serialization.h"
			],
			[
				"doc",
				"pgb\\src\\forestdb\\docs.h"
			],
			[
				"chain.",
				"pgb\\src\\test\\chain.cpp"
			],
			[
				"comm",
				"pgb\\src\\test\\common.cpp"
			],
			[
				"chain",
				"pgb\\src\\test\\chain.cpp"
			],
			[
				"coin",
				"pgb\\src\\chain\\coin.h"
			],
			[
				"blockma",
				"pgb\\src\\chain\\blockmap.h"
			],
			[
				"docs.h",
				"pgb\\src\\forestdb\\docs.h"
			],
			[
				"com",
				"pgb\\src\\crypto\\common.h"
			],
			[
				"forestdb.cp",
				"pgb\\src\\test\\forestdb.cpp"
			],
			[
				"common",
				"pgb\\src\\common\\types.h"
			],
			[
				"fdb_er",
				"pgb\\thirdparty\\forestdb\\src\\fdb_errors.cc"
			],
			[
				"fdb.cc",
				"pgb\\thirdparty\\forestdb\\src\\forestdb.cc"
			],
			[
				"all.",
				"pgb\\src\\forestdb\\all.h"
			],
			[
				"all.h",
				"pgb\\src\\forestdb\\all.h"
			],
			[
				"fdb_e",
				"pgb\\thirdparty\\forestdb\\include\\libforestdb\\fdb_errors.h"
			],
			[
				"forestdb.cpp",
				"pgb\\src\\test\\forestdb.cpp"
			],
			[
				"operation",
				"src\\chain\\operations.cpp"
			],
			[
				"operat",
				"src\\chain\\operations.h"
			],
			[
				"bitmas",
				"src\\common\\bitmask.h"
			],
			[
				"chain.cpp",
				"src\\chain\\chain.cpp"
			],
			[
				"compa",
				"src\\common\\compat.h"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"chain.cp",
				"src\\test\\chain.cpp"
			],
			[
				"chain.c",
				"src\\chain\\chain.cpp"
			],
			[
				"interpre",
				"src\\script\\interpreter.cpp"
			],
			[
				"interpr",
				"src\\script\\interpreter.h"
			],
			[
				"trans",
				"src\\chain\\transaction.h"
			],
			[
				"erk",
				"src\\crypto\\merkle.cpp"
			],
			[
				"merkl",
				"src\\crypto\\merkle.h"
			],
			[
				"transa",
				"src\\chain\\transaction.h"
			],
			[
				"script.cpp",
				"src\\test\\script.cpp"
			],
			[
				"interp",
				"src\\script\\interpreter.cpp"
			],
			[
				"",
				"c:\\development\\pgb\\src\\script\\script.h"
			],
			[
				"inter",
				"src\\script\\interpreter.cpp"
			],
			[
				"script.c",
				"src\\script\\script.cpp"
			],
			[
				"script.cp",
				"src\\script\\script.cpp"
			],
			[
				"script",
				"src\\script\\script.h"
			],
			[
				"ranges.cp",
				"src\\test\\ranges.cpp"
			],
			[
				"itner",
				"src\\script\\interpreter.h"
			],
			[
				"sc",
				"src\\script\\script.h"
			],
			[
				"sha256",
				"src\\crypto\\sha256.h"
			],
			[
				"types.h",
				"src\\common\\types.h"
			],
			[
				"scrtipt.h",
				"src\\script\\script.h"
			],
			[
				"scipt",
				"src\\script\\script.h"
			],
			[
				"rypto",
				"src\\test\\crypto.cpp"
			],
			[
				"crypto",
				"src\\test\\crypto.cpp"
			],
			[
				"cyrp",
				"src\\test\\crypto.cpp"
			],
			[
				"key",
				"src\\crypto\\key.h"
			],
			[
				"en",
				"src\\common\\endian.h"
			],
			[
				"commo",
				"src\\crypto\\common.h"
			],
			[
				"seeds.",
				"chainparamsseeds.h"
			],
			[
				"chainpar",
				"chainparams.cpp"
			],
			[
				"transaction.h",
				"primitives\\transaction.h"
			],
			[
				"inic",
				"init.cpp"
			],
			[
				"test_ma",
				"test\\test_math.cpp"
			],
			[
				"dyna",
				"simulation\\dynamics.cpp"
			],
			[
				"dynam",
				"simulation\\dynamics.cpp"
			],
			[
				"geometry",
				"core\\geometry.h"
			],
			[
				"dynami",
				"simulation\\dynamics.cpp"
			],
			[
				"assetpro",
				"assets\\assetprototypes.cpp"
			],
			[
				"worlduist",
				"app\\worlduistates.h"
			],
			[
				"test_mah",
				"test\\test_math.cpp"
			],
			[
				"test_math",
				"test\\test_math.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"blcokinde",
				"BlockIndex"
			],
			[
				"chainc",
				"ChainContext"
			],
			[
				"blockmap",
				"BlockMap"
			],
			[
				"chaincon",
				"ChainContext"
			],
			[
				"blockinde",
				"BlockIndex"
			],
			[
				"acceptan",
				"AcceptanceResult"
			],
			[
				"writeblock",
				"WriteBlock"
			],
			[
				"chainpar",
				"ChainParams"
			],
			[
				"acceptancer",
				"AcceptanceResult"
			],
			[
				"blockindex",
				"BlockIndex"
			],
			[
				"acceptancere",
				"AcceptanceResult"
			],
			[
				"blockfile",
				"BlockFileDB"
			],
			[
				"Blockmap",
				"BlockMap"
			],
			[
				"validations",
				"ValidationState"
			],
			[
				"cons",
				"ConsensusParams"
			],
			[
				"RawTRa",
				"RawTransaction"
			],
			[
				"Tx",
				"TxIn"
			],
			[
				"time_poin",
				"time_point"
			],
			[
				"transac",
				"Transaction"
			],
			[
				"BlockHea",
				"BlockHeader"
			],
			[
				"consensusp",
				"ConsensusParams"
			],
			[
				"signaturech",
				"TransactionSignatureChecker"
			],
			[
				"TxOut",
				"TxOut"
			],
			[
				"getscripte",
				"GetScriptElementCount"
			],
			[
				"getscript",
				"GetScriptElementCount"
			],
			[
				"ValidationSt",
				"ValidationState"
			],
			[
				"TxIn",
				"TxIn"
			],
			[
				"moneyp",
				"MoneyParams"
			],
			[
				"txout",
				"TxOut"
			],
			[
				"rawtra",
				"RawTransaction"
			],
			[
				"conses",
				"ConsensusParams"
			],
			[
				"TxOutRe",
				"TxOutRef"
			],
			[
				"iscoinb",
				"IsCoinBase"
			],
			[
				"Transaction",
				"Transaction"
			],
			[
				"getseriali",
				"GetSerializedSize"
			],
			[
				"networkpa",
				"NodeNetworkParams"
			],
			[
				"consen",
				"ConsensusParams"
			],
			[
				"Block",
				"Block"
			],
			[
				"computemerk",
				"ComputeMerkleRoot"
			],
			[
				"merkl",
				"ComputeMerkleRoot"
			],
			[
				"BlockIn",
				"BlockIndex"
			],
			[
				"BlockIndex",
				"BlockIndex"
			],
			[
				"blockheader",
				"BlockHeader"
			],
			[
				"blckindexhe",
				"BlockIndexHeader"
			],
			[
				"index",
				"index"
			],
			[
				"CreateDEf",
				"CreateDefaultChainParams"
			],
			[
				"InitBlo",
				"InitBlockIndex"
			],
			[
				"ChainPa",
				"ChainParams"
			],
			[
				"ChainPar",
				"ChainParams"
			],
			[
				"Chain",
				"Chain"
			],
			[
				"blockhe",
				"ContextualCheckBlockHeader"
			],
			[
				"Acceptance",
				"AcceptanceResult"
			],
			[
				"chain",
				"Chain"
			],
			[
				"Raise",
				"RaiseValidity"
			],
			[
				"blcokind",
				"BlockIndex"
			],
			[
				"BlockHe",
				"BlockHeader"
			],
			[
				"blockindexd",
				"BlockIndexData"
			],
			[
				"blockin",
				"BlockIndex"
			],
			[
				"blockheade",
				"BlockHeader"
			],
			[
				"ValidationS",
				"ValidationState"
			],
			[
				"GetAnce",
				"GetAncestor"
			],
			[
				"blockhead",
				"BlockHeader"
			],
			[
				"chainpa",
				"ChainParams"
			],
			[
				"blockhea",
				"BlockHeader"
			],
			[
				"markblo",
				"MarkBlockAsTransactionsReceived"
			],
			[
				"BlockDb",
				"BlockIndexDataDb"
			],
			[
				"validationst",
				"ValidationState"
			],
			[
				"BLockInde",
				"BlockIndex"
			],
			[
				"validat",
				"ValidationState"
			],
			[
				"acceptb l",
				"AcceptBlockHeader"
			],
			[
				"chainparm",
				"ChainParams"
			],
			[
				"Accept",
				"Accept"
			],
			[
				"BlockFile",
				"BlockFileHandle"
			],
			[
				"BlockFileH",
				"BlockFileHandle"
			],
			[
				"LoadEx",
				"LoadExternalBlockFile"
			],
			[
				"BlockMap",
				"block_map_t"
			],
			[
				"ChainParm",
				"ChainParams"
			],
			[
				"initblock",
				"InitBlockIndex"
			],
			[
				"Blcok",
				"Block"
			],
			[
				"blokindexda",
				"BlockIndexData"
			],
			[
				"InitBloc",
				"InitBlockIndex"
			],
			[
				"Calculate",
				"CalculateHash"
			],
			[
				"blcok",
				"Block"
			],
			[
				"BlockPo",
				"DiskBlockPos"
			],
			[
				"filehandl",
				"FileHandle"
			],
			[
				"initblockin",
				"InitBlockIndex"
			],
			[
				"nodenetw",
				"NodeNetwork"
			],
			[
				"network",
				"Network"
			],
			[
				"subnet",
				"subnet"
			],
			[
				"whitelist",
				"WhiteList"
			],
			[
				"operator==",
				"operator=="
			],
			[
				"Banr",
				"BanReason"
			],
			[
				"BanReason",
				"BanReason"
			],
			[
				"BlackList",
				"BlackList"
			],
			[
				"banen",
				"BanEntry"
			],
			[
				"blacklist",
				"BlackList"
			],
			[
				"storewhitelist",
				"StoreWhiteList"
			],
			[
				"kvsha",
				"FdbKvsHandle"
			],
			[
				"fdb_set",
				"fdb_set"
			],
			[
				"insert",
				"insert"
			],
			[
				"kvshandle",
				"FdbKvsHandle"
			],
			[
				"WhiteLi",
				"WhiteList"
			],
			[
				"bane",
				"BanEntry"
			],
			[
				"ban",
				"BanEntry"
			],
			[
				"save",
				"save"
			],
			[
				"serializationop",
				"SerializationOps"
			],
			[
				"GetSeriali",
				"GetSerializedSize"
			],
			[
				"banent",
				"BanEntry"
			],
			[
				"banentr",
				"BanEntry"
			],
			[
				"RangeOps",
				"RangeOps"
			],
			[
				"NodeParam",
				"NodeParams"
			],
			[
				"serializeandwi",
				"SerializeAndWrite"
			],
			[
				"serializeandw",
				"SerializeAndWrite"
			],
			[
				"murmu",
				"MurmurHash3"
			],
			[
				"ReadLE",
				"ReadLE32"
			],
			[
				"murmurh",
				"MurmurHash3"
			],
			[
				"Message",
				"MessageHeader"
			],
			[
				"chainlim",
				"ChainLimits"
			],
			[
				"limitedmap",
				"limitedmap"
			],
			[
				"messagefo",
				"MessageFooter"
			],
			[
				"messageh",
				"MessageHeader"
			],
			[
				"messageha",
				"MessageHeader"
			],
			[
				"GetKe",
				"GetKey"
			],
			[
				"rollingb",
				"RollingBloomFilter"
			],
			[
				"BanEn",
				"BanEntry"
			],
			[
				"isbann",
				"IsBanned"
			],
			[
				"",
				"ASIO_ALSO_INHERIT_TRACKED_HANDLER"
			],
			[
				"messagehe",
				"MessageHeader"
			]
		],
		"width": 624.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 210.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
